#!/bin/bash
#
# This scripts reads the mrhttpd configuration file mrhttpd.conf
# and generates the C include config.h
#
# mrhttpd v2.7.2
# Copyright (c) 2007-2021  Martin Rogge <martin_rogge@users.sourceforge.net>

. ./mrhttpd.conf
. ./checkconfig

echo
echo "mrhttpd configuration"
echo "====================="
echo
echo "System user:           $_SYSTEM_USER"
echo "Path prefix:           $_PATH_PREFIX"
echo "Server port:           $_SERVER_PORT"
echo "Server root:           $_SERVER_ROOT"
echo "Binary directory:      $_BIN_DIR"
echo "Private directory:     $_PRIVATE_DIR"
echo "Public directory:      $_PUBLIC_DIR"
echo "CGI script directory:  $_CGI_DIR"
echo "Path for CGI scripts:  $_CGI_PATH"
echo "Path for PUT requests: $_PUT_PATH"
echo "Default index name:    $_DEFAULT_INDEX"
echo "Auto index option:     $_AUTO_INDEX"
echo "Pragma:                $_PRAGMA"
echo "Log level:             $_LOG_LEVEL"
echo "Log file:              $_LOG_FILE"
echo "External file command: $_EXT_FILE_CMD"
echo "Sendfile option:       $_USE_SENDFILE"
echo "Detach option:         $_DETACH"
echo "HTTP header length:    $_HTTP_HEADER_LENGTH"
echo "Authorisation header:  $_AUTH_HEADER"
echo "Authorisation methods: $_AUTH_METHODS"
echo "Query string hack:     $_QUERY_HACK"
echo 

if [ -n "$ERROR" ]; then
  echo "ERROR: There are fatal errors in the configuration file."
  echo "NO include has been generated."
  echo "Please correct the errors and repeat this script."
  echo
  exit 1
fi

if [ -n "$WARNING" ]; then
  echo "WARNING: There are entries missing in the configuration file."
  echo "A best guess has been made for the missing entries."
  echo "Please review the configuration and repeat this step if necessary."
  echo
fi

rm config.h &>/dev/null

cat > config.h << EOF
/*

This include has been generated automatically. DO NOT CHANGE MANUALLY.
Instead, change the master configuration file mrhttpd.conf and run configure.

mrhttpd v2.7.2
Copyright (c) 2007-2021  Martin Rogge <martin_rogge@users.sourceforge.net>

*/

EOF

if [ -n "$SYSTEM_USER" ]; then
  echo '#define SYSTEM_USER         "'$SYSTEM_USER'"' >>config.h
fi
if [ -n "$PATH_PREFIX" ]; then
  echo '#define PATH_PREFIX         "'$PATH_PREFIX'"' >>config.h
fi
if [ -n "$SERVER_PORT" ]; then
  echo '#define SERVER_PORT         '$SERVER_PORT >>config.h
  echo '#define SERVER_PORT_STR     "'$SERVER_PORT'"' >>config.h
fi
if [ -n "$SERVER_ROOT" ]; then
  echo '#define SERVER_ROOT         "'$SERVER_ROOT'"' >>config.h
fi
if [ -n "$BIN_DIR" ]; then
  echo '#define BIN_DIR             "'$BIN_DIR'"' >>config.h
fi
if [ -n "$PRIVATE_DIR" ]; then
  echo '#define PRIVATE_DIR         "'$PRIVATE_DIR'"' >>config.h
fi
if [ -n "$PUBLIC_DIR" ]; then
  echo '#define PUBLIC_DIR          "'$PUBLIC_DIR'"' >>config.h
fi
if [ -n "$CGI_PATH" ]; then
  echo '#define CGI_PATH            "'$CGI_PATH'"' >>config.h
fi
if [ -n "$CGI_DIR" ]; then
  echo '#define CGI_DIR             "'$CGI_DIR'"' >>config.h
fi
if [ -n "$PUT_PATH" ]; then
  echo '#define PUT_PATH            "'$PUT_PATH'"' >>config.h
fi
if [ -n "$DEFAULT_INDEX" ]; then
  echo '#define DEFAULT_INDEX       "'$DEFAULT_INDEX'"' >>config.h
fi
if [ -n "$AUTO_INDEX" ]; then
  echo '#define AUTO_INDEX          '$AUTO_INDEX >>config.h
fi
if [ -n "$PRAGMA" ]; then
  echo '#define PRAGMA              "'$PRAGMA'"' >>config.h
fi
if [ -n "$LOG_LEVEL" ]; then
  echo '#define LOG_LEVEL           '$LOG_LEVEL >>config.h
fi
if [ -n "$LOG_FILE" ]; then
  echo '#define LOG_FILE            "'$LOG_FILE'"' >>config.h
fi
if [ -n "$EXT_FILE_CMD" ]; then
  echo '#define EXT_FILE_CMD        "'$EXT_FILE_CMD'"' >>config.h
fi
if [ -n "$USE_SENDFILE" ]; then
  echo '#define USE_SENDFILE        '$USE_SENDFILE >>config.h
fi
if [ -n "$DETACH" ]; then
  echo '#define DETACH              '$DETACH >>config.h
fi
if [ -n "$HTTP_HEADER_LENGTH" ]; then
  echo '#define HTTP_HEADER_LENGTH  '$HTTP_HEADER_LENGTH >>config.h
fi
if [ -n "$AUTH_HEADER" ]; then
  echo '#define AUTH_HEADER         "'$AUTH_HEADER'"' >>config.h
fi
if [ -n "$AUTH_METHODS" ]; then
  echo '#define AUTH_METHODS        '$AUTH_METHODS >>config.h
fi
if [ -n "$QUERY_HACK" ]; then
  echo '#define QUERY_HACK          "'$QUERY_HACK'"' >>config.h
fi
if [ -n "$DEBUG" ]; then
  echo '#define DEBUG               '$DEBUG >>config.h
fi
echo >>config.h

echo "Configuration complete."
echo
