#!/bin/bash
#
# This scripts checks the mrhttpd configuration and generates defaults
#
# mrhttpd v2.7.2
# Copyright (c) 2007-2021  Martin Rogge <martin_rogge@users.sourceforge.net>

if [ -z "$SYSTEM_USER" ]; then
  _SYSTEM_USER="missing, user switch disabled"
  WARNING=yes
else
  _SYSTEM_USER=$SYSTEM_USER
fi

if [ -z "$PATH_PREFIX" ]; then
  _PATH_PREFIX="missing, path prefix disabled"
  WARNING=yes
else
  _PATH_PREFIX=$PATH_PREFIX
fi

if [ -z "$SERVER_ROOT" ]; then
  _SERVER_ROOT="missing, chroot function disabled"
  WARNING=yes
else
  _SERVER_ROOT=$SERVER_ROOT
fi

if [ -z "$SERVER_PORT" ]; then
  _SERVER_PORT="missing, default: 8080"
  SERVER_PORT=8080
  WARNING=yes
else
  _SERVER_PORT=$SERVER_PORT
fi

if [ -z "$PRIVATE_DIR" ]; then
  _PRIVATE_DIR="missing, HTML error replies disabled"
  WARNING=yes
else
  _PRIVATE_DIR=$PRIVATE_DIR
fi

if [ -z "$BIN_DIR" ]; then
  if [ -d /usr/local/sbin ]; then
    _BIN_DIR="missing, default: /usr/local/sbin"
    BIN_DIR=/usr/local/sbin
    WARNING=yes
  else
    _BIN_DIR="missing, fatal"
    ERROR=yes
  fi
else
  _BIN_DIR=$BIN_DIR
fi

if [ -z "$PUBLIC_DIR" ]; then
  _PUBLIC_DIR="missing, fatal"
  ERROR=yes
else
  _PUBLIC_DIR=$PUBLIC_DIR
fi

if [ -z "$CGI_DIR" ]; then
  if [ -z "$CGI_PATH" ]; then
    _CGI_DIR="missing, OK"
    WARNING=yes
  else
    _CGI_DIR="missing, fatal"
    ERROR=yes
  fi
else
  _CGI_DIR=$CGI_DIR
fi

if [ -z "$CGI_PATH" ]; then
  _CGI_PATH="missing, CGI disabled"
  WARNING=yes
else
  _CGI_PATH=$CGI_PATH
fi

if [ -z "$PUT_PATH" ]; then
  _PUT_PATH="missing, OK"
else
  _PUT_PATH=$PUT_PATH
fi

if [ -z "$DEFAULT_INDEX" ]; then
  _DEFAULT_INDEX="missing, function disabled"
  WARNING=yes
else
  _DEFAULT_INDEX=$DEFAULT_INDEX
fi

if [ -z "$AUTO_INDEX" ]; then
  _AUTO_INDEX="missing, default: 0"
  AUTO_INDEX=0;
  WARNING=yes
else
  _AUTO_INDEX=$AUTO_INDEX
fi

if [ -z "$PRAGMA" ]; then
  _PRAGMA="missing, OK"
else
  _PRAGMA=$PRAGMA
fi

if [ -z "$LOG_LEVEL" ]; then
  _LOG_LEVEL="missing, default: 0"
  LOG_LEVEL=0
  WARNING=yes
else
  _LOG_LEVEL=$LOG_LEVEL
fi

if [ -z "$LOG_FILE" ]; then
  if [ "$LOG_LEVEL" != "0" ]; then
    _LOG_FILE="missing, default: stdout"
    WARNING=yes
  else
    _LOG_FILE="missing, OK"
  fi
else
  _LOG_FILE=$LOG_FILE
fi

if [ -z "$EXT_FILE_CMD" ]; then
  _EXT_FILE_CMD="missing, function disabled"
  WARNING=yes
else
  _EXT_FILE_CMD=$EXT_FILE_CMD
fi

if [ -z "$USE_SENDFILE" ]; then
  OS=$(uname) 2> /dev/null
  if [ "$OS" = "Linux" ]; then
    USE_SENDFILE=1
  else
    USE_SENDFILE=0
  fi
  _USE_SENDFILE="missing, set to: $USE_SENDFILE"
  WARNING=yes
else
  _USE_SENDFILE=$USE_SENDFILE
fi

if [ -z "$DETACH" ]; then
  _DETACH="missing, default: 1"
  DETACH=1
  WARNING=yes
else
  _DETACH=$DETACH
fi

if [ -z "$HTTP_HEADER_LENGTH" ]; then
  _HTTP_HEADER_LENGTH="missing, default: 2048"
  HTTP_HEADER_LENGTH=2048
  WARNING=yes
else
  _HTTP_HEADER_LENGTH=$HTTP_HEADER_LENGTH
fi

if [ -z "$AUTH_HEADER" ]; then
  _AUTH_HEADER="missing, OK"
else
  _AUTH_HEADER=$AUTH_HEADER
fi

if [ -z "$AUTH_METHODS" ]; then
  if [ -z "$AUTH_HEADER" ]; then
    _AUTH_METHODS="missing, OK"
  else
    _AUTH_METHODS="missing, default: 15"
    AUTH_METHODS=15
    WARNING=yes
  fi
else
  _AUTH_METHODS=$AUTH_METHODS
fi

if [ -z "$QUERY_HACK" ]; then
  _QUERY_HACK="missing, OK"
else
  _QUERY_HACK=$QUERY_HACK
fi

if [ -z "$DEBUG" ]; then
  DEBUG=0
fi
